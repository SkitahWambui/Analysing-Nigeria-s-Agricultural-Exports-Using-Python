{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ba29c1d7",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:00.732844Z",
     "iopub.status.busy": "2024-06-06T09:53:00.731810Z",
     "iopub.status.idle": "2024-06-06T09:53:03.019760Z",
     "shell.execute_reply": "2024-06-06T09:53:03.018662Z"
    },
    "papermill": {
     "duration": 2.297886,
     "end_time": "2024-06-06T09:53:03.022555",
     "exception": false,
     "start_time": "2024-06-06T09:53:00.724669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import libraries\n",
    "\n",
    "import numpy as np \n",
    "import pandas as pd \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# import dataset\n",
    "ex = pd.read_csv('/kaggle/input/nigerian-agricultural-exports/nigeria_agricultural_exports.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3eee2bc6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.034538Z",
     "iopub.status.busy": "2024-06-06T09:53:03.034148Z",
     "iopub.status.idle": "2024-06-06T09:53:03.040102Z",
     "shell.execute_reply": "2024-06-06T09:53:03.038859Z"
    },
    "papermill": {
     "duration": 0.014685,
     "end_time": "2024-06-06T09:53:03.042540",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.027855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# convert to dataframe\n",
    "ex = pd.DataFrame(ex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8626b52b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.054321Z",
     "iopub.status.busy": "2024-06-06T09:53:03.053406Z",
     "iopub.status.idle": "2024-06-06T09:53:03.061256Z",
     "shell.execute_reply": "2024-06-06T09:53:03.060200Z"
    },
    "papermill": {
     "duration": 0.01615,
     "end_time": "2024-06-06T09:53:03.063504",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.047354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 10)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the shape of the dataframe\n",
    "ex.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1ff0f29b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.075921Z",
     "iopub.status.busy": "2024-06-06T09:53:03.074877Z",
     "iopub.status.idle": "2024-06-06T09:53:03.102222Z",
     "shell.execute_reply": "2024-06-06T09:53:03.101174Z"
    },
    "papermill": {
     "duration": 0.036296,
     "end_time": "2024-06-06T09:53:03.104772",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.068476",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Company</th>\n",
       "      <th>Export Country</th>\n",
       "      <th>Date</th>\n",
       "      <th>Units Sold</th>\n",
       "      <th>unit_price</th>\n",
       "      <th>Profit per unit</th>\n",
       "      <th>Export Value</th>\n",
       "      <th>Destination Port</th>\n",
       "      <th>Transportation Mode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Rubber</td>\n",
       "      <td>Farmgate Nigeria Limited</td>\n",
       "      <td>Austria</td>\n",
       "      <td>11/16/2023</td>\n",
       "      <td>721</td>\n",
       "      <td>31443.05</td>\n",
       "      <td>5863.92</td>\n",
       "      <td>22670439.05</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Palm Oil</td>\n",
       "      <td>Prime Agro Exports Nigeria Limited</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1/8/2021</td>\n",
       "      <td>881</td>\n",
       "      <td>23151.97</td>\n",
       "      <td>5868.73</td>\n",
       "      <td>20396885.57</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Cassava</td>\n",
       "      <td>Farmgate Nigeria Limited</td>\n",
       "      <td>Germany</td>\n",
       "      <td>10/14/2020</td>\n",
       "      <td>702</td>\n",
       "      <td>18536.45</td>\n",
       "      <td>5105.01</td>\n",
       "      <td>13012587.90</td>\n",
       "      <td>Calabar</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Rubber</td>\n",
       "      <td>Nigerian Export Promotion Council (NEPC)</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>12/31/2022</td>\n",
       "      <td>191</td>\n",
       "      <td>21981.31</td>\n",
       "      <td>7781.54</td>\n",
       "      <td>4198430.21</td>\n",
       "      <td>Warri</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sesame</td>\n",
       "      <td>Nigeria Agro Export Company</td>\n",
       "      <td>France</td>\n",
       "      <td>12/19/2022</td>\n",
       "      <td>373</td>\n",
       "      <td>13415.94</td>\n",
       "      <td>9590.95</td>\n",
       "      <td>5004145.62</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Product Name                                   Company Export Country  \\\n",
       "0       Rubber                  Farmgate Nigeria Limited        Austria   \n",
       "1     Palm Oil        Prime Agro Exports Nigeria Limited        Germany   \n",
       "2      Cassava                  Farmgate Nigeria Limited        Germany   \n",
       "3       Rubber  Nigerian Export Promotion Council (NEPC)        Belgium   \n",
       "4       Sesame               Nigeria Agro Export Company         France   \n",
       "\n",
       "         Date  Units Sold  unit_price  Profit per unit  Export Value  \\\n",
       "0  11/16/2023         721    31443.05          5863.92   22670439.05   \n",
       "1    1/8/2021         881    23151.97          5868.73   20396885.57   \n",
       "2  10/14/2020         702    18536.45          5105.01   13012587.90   \n",
       "3  12/31/2022         191    21981.31          7781.54    4198430.21   \n",
       "4  12/19/2022         373    13415.94          9590.95    5004145.62   \n",
       "\n",
       "  Destination Port Transportation Mode  \n",
       "0            Lagos                 Sea  \n",
       "1            Lagos                 Sea  \n",
       "2          Calabar                 Sea  \n",
       "3            Warri                 Sea  \n",
       "4            Lagos                 Sea  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the head of the dataset\n",
    "ex.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "24ae4198",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.117612Z",
     "iopub.status.busy": "2024-06-06T09:53:03.117249Z",
     "iopub.status.idle": "2024-06-06T09:53:03.136103Z",
     "shell.execute_reply": "2024-06-06T09:53:03.135104Z"
    },
    "papermill": {
     "duration": 0.028367,
     "end_time": "2024-06-06T09:53:03.138643",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.110276",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Company</th>\n",
       "      <th>Export Country</th>\n",
       "      <th>Date</th>\n",
       "      <th>Units Sold</th>\n",
       "      <th>unit_price</th>\n",
       "      <th>Profit per unit</th>\n",
       "      <th>Export Value</th>\n",
       "      <th>Destination Port</th>\n",
       "      <th>Transportation Mode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>Cashew</td>\n",
       "      <td>Nigeria Agro Export Company</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>6/11/2023</td>\n",
       "      <td>730</td>\n",
       "      <td>49937.99</td>\n",
       "      <td>9149.40</td>\n",
       "      <td>36454732.70</td>\n",
       "      <td>Warri</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>Rubber</td>\n",
       "      <td>Agro Export Nigeria Ltd</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>11/1/2023</td>\n",
       "      <td>952</td>\n",
       "      <td>15607.62</td>\n",
       "      <td>5086.57</td>\n",
       "      <td>14858454.24</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>Rubber</td>\n",
       "      <td>Agro Allied Exporters Nigeria Limited</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>8/6/2023</td>\n",
       "      <td>447</td>\n",
       "      <td>49544.50</td>\n",
       "      <td>6381.92</td>\n",
       "      <td>22146391.50</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>Cashew</td>\n",
       "      <td>Greenfield Agro Exporters Nigeria Limited</td>\n",
       "      <td>Germany</td>\n",
       "      <td>3/5/2023</td>\n",
       "      <td>315</td>\n",
       "      <td>42814.92</td>\n",
       "      <td>6620.22</td>\n",
       "      <td>13486699.80</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>Cassava</td>\n",
       "      <td>Nigeria Agro Export Company</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>8/9/2020</td>\n",
       "      <td>504</td>\n",
       "      <td>10656.58</td>\n",
       "      <td>9979.02</td>\n",
       "      <td>5370916.32</td>\n",
       "      <td>Lagos</td>\n",
       "      <td>Sea</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Product Name                                    Company Export Country  \\\n",
       "995       Cashew                Nigeria Agro Export Company    Netherlands   \n",
       "996       Rubber                    Agro Export Nigeria Ltd         Sweden   \n",
       "997       Rubber      Agro Allied Exporters Nigeria Limited    Netherlands   \n",
       "998       Cashew  Greenfield Agro Exporters Nigeria Limited        Germany   \n",
       "999      Cassava                Nigeria Agro Export Company        Denmark   \n",
       "\n",
       "          Date  Units Sold  unit_price  Profit per unit  Export Value  \\\n",
       "995  6/11/2023         730    49937.99          9149.40   36454732.70   \n",
       "996  11/1/2023         952    15607.62          5086.57   14858454.24   \n",
       "997   8/6/2023         447    49544.50          6381.92   22146391.50   \n",
       "998   3/5/2023         315    42814.92          6620.22   13486699.80   \n",
       "999   8/9/2020         504    10656.58          9979.02    5370916.32   \n",
       "\n",
       "    Destination Port Transportation Mode  \n",
       "995            Warri                 Sea  \n",
       "996            Lagos                 Sea  \n",
       "997            Lagos                 Sea  \n",
       "998            Lagos                 Sea  \n",
       "999            Lagos                 Sea  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the tail of the dataset\n",
    "ex.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8d644718",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.151815Z",
     "iopub.status.busy": "2024-06-06T09:53:03.151374Z",
     "iopub.status.idle": "2024-06-06T09:53:03.157507Z",
     "shell.execute_reply": "2024-06-06T09:53:03.156416Z"
    },
    "papermill": {
     "duration": 0.015805,
     "end_time": "2024-06-06T09:53:03.160176",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.144371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Product Name', 'Company', 'Export Country', 'Date', 'Units Sold',\n",
      "       'unit_price', 'Profit per unit', 'Export Value', 'Destination Port',\n",
      "       'Transportation Mode'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# check the column names\n",
    "print(ex.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1ae05ba4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.173748Z",
     "iopub.status.busy": "2024-06-06T09:53:03.173330Z",
     "iopub.status.idle": "2024-06-06T09:53:03.180017Z",
     "shell.execute_reply": "2024-06-06T09:53:03.178939Z"
    },
    "papermill": {
     "duration": 0.01618,
     "end_time": "2024-06-06T09:53:03.182361",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.166181",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Product Name            object\n",
      "Company                 object\n",
      "Export Country          object\n",
      "Date                    object\n",
      "Units Sold               int64\n",
      "unit_price             float64\n",
      "Profit per unit        float64\n",
      "Export Value           float64\n",
      "Destination Port        object\n",
      "Transportation Mode     object\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "# check the data types\n",
    "print(ex.dtypes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "952e8ff5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.195666Z",
     "iopub.status.busy": "2024-06-06T09:53:03.195256Z",
     "iopub.status.idle": "2024-06-06T09:53:03.206405Z",
     "shell.execute_reply": "2024-06-06T09:53:03.205345Z"
    },
    "papermill": {
     "duration": 0.020445,
     "end_time": "2024-06-06T09:53:03.208656",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.188211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Product Name           0\n",
       "Company                0\n",
       "Export Country         0\n",
       "Date                   0\n",
       "Units Sold             0\n",
       "unit_price             0\n",
       "Profit per unit        0\n",
       "Export Value           0\n",
       "Destination Port       0\n",
       "Transportation Mode    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for nulls \n",
    "ex.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a0d24579",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.222999Z",
     "iopub.status.busy": "2024-06-06T09:53:03.222009Z",
     "iopub.status.idle": "2024-06-06T09:53:03.246792Z",
     "shell.execute_reply": "2024-06-06T09:53:03.245695Z"
    },
    "papermill": {
     "duration": 0.034775,
     "end_time": "2024-06-06T09:53:03.249355",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.214580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Units Sold</th>\n",
       "      <th>unit_price</th>\n",
       "      <th>Profit per unit</th>\n",
       "      <th>Export Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1.000000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>536.804000</td>\n",
       "      <td>30010.266660</td>\n",
       "      <td>6125.299550</td>\n",
       "      <td>1.631766e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>251.311112</td>\n",
       "      <td>11515.423486</td>\n",
       "      <td>2269.844681</td>\n",
       "      <td>1.028734e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>103.000000</td>\n",
       "      <td>10006.540000</td>\n",
       "      <td>2000.300000</td>\n",
       "      <td>1.323777e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>322.750000</td>\n",
       "      <td>20013.620000</td>\n",
       "      <td>4261.327500</td>\n",
       "      <td>7.669552e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>519.000000</td>\n",
       "      <td>30082.600000</td>\n",
       "      <td>6132.150000</td>\n",
       "      <td>1.441451e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>743.250000</td>\n",
       "      <td>39955.005000</td>\n",
       "      <td>8038.315000</td>\n",
       "      <td>2.262969e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>999.000000</td>\n",
       "      <td>49985.860000</td>\n",
       "      <td>9990.570000</td>\n",
       "      <td>4.712082e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Units Sold    unit_price  Profit per unit  Export Value\n",
       "count  1000.000000   1000.000000      1000.000000  1.000000e+03\n",
       "mean    536.804000  30010.266660      6125.299550  1.631766e+07\n",
       "std     251.311112  11515.423486      2269.844681  1.028734e+07\n",
       "min     103.000000  10006.540000      2000.300000  1.323777e+06\n",
       "25%     322.750000  20013.620000      4261.327500  7.669552e+06\n",
       "50%     519.000000  30082.600000      6132.150000  1.441451e+07\n",
       "75%     743.250000  39955.005000      8038.315000  2.262969e+07\n",
       "max     999.000000  49985.860000      9990.570000  4.712082e+07"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get a summary of the data\n",
    "ex.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "57a622b1",
   "metadata": {
    "papermill": {
     "duration": 0.005958,
     "end_time": "2024-06-06T09:53:03.261526",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.255568",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**1. Sales Performance**\n",
    "\n",
    "1.1 What are the top selling products?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "62cd4082",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.275699Z",
     "iopub.status.busy": "2024-06-06T09:53:03.275284Z",
     "iopub.status.idle": "2024-06-06T09:53:03.292966Z",
     "shell.execute_reply": "2024-06-06T09:53:03.291741Z"
    },
    "papermill": {
     "duration": 0.027879,
     "end_time": "2024-06-06T09:53:03.295539",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.267660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# finding the top selling products\n",
    "top_products = ex.groupby('Product Name')['Units Sold'].sum().sort_values(ascending = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b8e9dada",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T09:53:03.309978Z",
     "iopub.status.busy": "2024-06-06T09:53:03.309566Z",
     "iopub.status.idle": "2024-06-06T09:53:03.742393Z",
     "shell.execute_reply": "2024-06-06T09:53:03.741047Z"
    },
    "papermill": {
     "duration": 0.442939,
     "end_time": "2024-06-06T09:53:03.744852",
     "exception": false,
     "start_time": "2024-06-06T09:53:03.301913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Top 5 Selling Products')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot for top 5 selling products\n",
    "top_5 = top_products.head(5)\n",
    "\n",
    "sns.barplot(x=top_5.index, y=top_5.values)\n",
    "plt.xlabel('Product Name')\n",
    "plt.ylabel('Units Sold')\n",
    "plt.title('Top 5 Selling Products')\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5160798,
     "sourceId": 8621302,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.700839,
   "end_time": "2024-06-06T09:53:04.373051",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-06T09:52:57.672212",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
